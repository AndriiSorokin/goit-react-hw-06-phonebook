{"version":3,"sources":["redux/types/userTypes.js","redux/reducers/userReducer.js","redux/store.js","redux/actions/user-action.js","PhoneBook/Form.js","PhoneBook/Contacts.js","PhoneBook/Filter.js","PhoneBook/PhoneBook.js","App.js","index.js","PhoneBook/PhoneBook.module.css"],"names":["ADD","CHANGE_FILTER","DELETE","items","createReducer","state","payload","filter","id","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","store","configureStore","reducer","contacts","persistReducer","userReducer","devTools","process","persistor","persistStore","addToList","createAction","name","phone","uuidv4","deleteUser","changeFilter","Form","inputHandler","target","value","setState","submitHandler","e","preventDefault","props","find","contact","alert","reset","onSubmit","this","className","style","form","autoComplete","onChange","placeholder","type","btn","Component","connect","dispatch","getVisibleUser","normalizeFilter","toLowerCase","includes","deleteContact","map","btnDelete","onClick","PhoneBook","preveProps","prevState","localStorage","setItem","JSON","stringify","getItem","parseContact","parse","console","log","container","length","App","ReactDOM","render","StrictMode","loading","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.379cd9b2.chunk.js","sourcesContent":["export const ADD = '@user/Add';\nexport const CHANGE_FILTER = '@user/ChangeFilter';\nexport const DELETE = '@user/Delete';\n","import { ADD, DELETE, CHANGE_FILTER } from '../types/userTypes';\nimport { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst items = createReducer([], {\n  [ADD]: (state, { payload }) => [...state, payload],\n  [DELETE]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case ADD:\n//       return [...state, payload];\n//     case DELETE:\n//       return state.filter(({ id }) => id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n\nconst filter = createReducer('', {\n  [CHANGE_FILTER]: (state, { payload }) => payload,\n});\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case CHANGE_FILTER:\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport userReducer from './reducers/userReducer';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n};\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, userReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import { ADD, DELETE, CHANGE_FILTER } from '../types/userTypes';\nimport { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addToList = createAction(ADD, ({ name, phone }) => ({\n  payload: {\n    name,\n    phone,\n    id: uuidv4(),\n  },\n}));\n// export const addToList = ({ name, phone }) => ({\n//   type: ADD,\n//   payload: {\n//     name,\n//     phone,\n//     id: uuidv4(),\n//   },\n// });\n\nexport const deleteUser = createAction(DELETE);\n// export const deleteUser = id => ({\n//   type: DELETE,\n//   payload: id,\n// });\n\nexport const changeFilter = createAction(CHANGE_FILTER);\n// export const changeFilter = value => ({\n//   type: CHANGE_FILTER,\n//   payload: value,\n// });\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addToList } from '../redux/actions/user-action';\nimport style from '../PhoneBook/PhoneBook.module.css';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    phone: '',\n  };\n\n  inputHandler = ({ target }) => {\n    const { value, name } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n    const { name } = this.state;\n    const { contacts } = this.props;\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is alredy contact!`);\n      this.reset();\n      return;\n    } else {\n      this.props.onSubmit(this.state);\n      this.reset();\n    }\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      phone: '',\n    });\n  };\n\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <form className={style.form} onSubmit={this.submitHandler} autoComplete=\"off\">\n        <input\n          onChange={this.inputHandler}\n          placeholder=\"Enter name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n        ></input>\n        <input\n          onChange={this.inputHandler}\n          placeholder=\"Enter phone\"\n          type=\"text\"\n          name=\"phone\"\n          value={phone}\n        ></input>\n        <button className={style.btn} type=\"submit\">\n          Add contacts\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStatetoProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: payload => dispatch(addToList(payload)),\n});\nexport default connect(mapStatetoProps, mapDispatchToProps)(Form);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteUser } from '../redux/actions/user-action';\nimport style from '../PhoneBook/PhoneBook.module.css';\n\nconst Contacts = ({ contacts, deleteContact }) => {\n  return (\n    <div>\n      <ul>\n        {contacts.map(contact => (\n          <li key={contact.id}>\n            <span>\n              {contact.name} : {contact.phone}\n            </span>\n            <button\n              className={style.btnDelete}\n              onClick={() => deleteContact(contact.id)}\n              type=\"button\"\n            >\n              delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nconst getVisibleUser = (contacts, filter) => {\n  const normalizeFilter = filter.toLowerCase();\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizeFilter));\n};\n\nconst mapStatetoProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleUser(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch(deleteUser(id)),\n});\nexport default connect(mapStatetoProps, mapDispatchToProps)(Contacts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../redux/actions/user-action';\nimport style from '../PhoneBook/PhoneBook.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={style.form}>\n      <p>Find contact by name</p>\n      <input type=\"text\" placeholder=\"Find\" value={value} onChange={onChange} />\n    </div>\n  );\n};\n\nconst mapStatetoProps = state => ({\n  value: state.contacts.filter,\n});\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport Form from './Form';\nimport Contacts from './Contacts';\nimport { connect } from 'react-redux';\nimport Filter from './Filter';\nimport style from '../PhoneBook/PhoneBook.module.css';\n\nclass PhoneBook extends Component {\n  state = {\n    contacts: [],\n  };\n\n  componentDidUpdate(preveProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contact', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const contact = localStorage.getItem('contact');\n    const parseContact = JSON.parse(contact);\n    if (parseContact) {\n      this.setState({ contacts: parseContact });\n    }\n  }\n  render() {\n    const contact = this.props;\n    console.log(contact);\n    return (\n      <div className={style.container}>\n        <h1>PhoneBook</h1>\n        <Form />\n        {contact.contact.length > 2 ? <Filter /> : ''}\n        <Contacts />\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = state => ({\n  contact: state.contacts.items,\n});\nexport default connect(mapStatetoProps)(PhoneBook);\n","import React from \"react\";\nimport PhoneBook from \"./PhoneBook/PhoneBook\";\n\nconst App = () => {\n  return (\n    <div>\n      <PhoneBook />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={'loading...'} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBook_container__3SDuF\",\"form\":\"PhoneBook_form__2FrpE\",\"btn\":\"PhoneBook_btn__lGfGp\",\"btnDelete\":\"PhoneBook_btnDelete__1xO3e\"};"],"sourceRoot":""}